【ビットシフト】

	・ビットを左または右にずらす演算のこと。
	・処理の高速化
	      > 整数値の2倍、4倍、8倍
	      > 整数値の(1/2)倍、(1/4)倍、(1/8)倍

    ・ビットフラグやビットマスクに利用される。
	・1バイト未満のデータと扱う時に利用される。
	      > 画像データ、音源データ等
	      
	・符号付き整数値(char、intなど)は負の値の時、
	  最上位ビットが必ず1である。
	  
	 (例)
	     00000000000000000000000000001101      13
	 +   11111111111111111111111111110011     -13
	 ----------------------------------------------
	    100000000000000000000000000000000       0   (左端の1は33ビット目なので捨てられる)
	    
	    

	＜論理シフト＞
		・左シフト : 1ビット左シフトすると値は2倍になる
		・右シフト : 1ビット右シフトすると値は(1/2)倍になる

	＜算術シフト＞
		・左シフト : 論理左シフトと同じだが負数にも対応できる。
		・右シフト : 論理右シフトと同じだが負数にも対応できる。

-------------------------------------------------------------------
【論理シフト】

  左に1ビットだけシフトすると値は2倍になる。

   00000000000000000000000000001101 << 1          13
                ↓ 2倍！
   00000000000000000000000000011010 << 1          26
                ↓ 2倍！
   00000000000000000000000000110100 << 1          52
                ↓ 2倍！
   00000000000000000000000001101000              104



  右に1ビットだけシフトすると値は(1/2)倍になる。

  00000000000000000000000000001101 >> 1          13
                ↓ (1/2)倍！
  00000000000000000000000000000110 >> 1           6
                ↓ (1/2)倍！
  00000000000000000000000000000011 >> 1           3
                ↓ (1/2)倍！
  00000000000000000000000000000001 >> 1           1
                ↓ (1/2)倍！
  00000000000000000000000000000000                0


-------------------------------------------------------------------
【算術シフト】
   ・整数値の最上位ビットは符号を表している。(0は正数、1は負数)
   ・算術シフトでは最上位ビットは維持される。
   ・算術右シフトで空いたビットは最上位ビットと同じ値で埋められる。

   左に1ビットだけシフトすると値は2倍になる。

    1111111110011100 << 1       -100
       ↓ 2倍！
    1111111100111000            -200


   右に1ビットだけシフトすると値は(1/2)倍になる。

    1000001100000000 >> 1       -32000
       ↓ (1/2)倍！
    1100000110000000 >> 1       -16000
       ↓ (1/2)倍！
    1110000011000000             -8000


-------------------------------------------------------------------
【ビットシフトの使用例】
    
    1バイトの中に2つのデータが入っていたら？

    +-------------------------+
    |   4ビット  |  4ビット   |
    +-------------------------+

    +-------------------------+
    |   x座標    |   y座標    |
    +-------------------------+

    +-------------------------+
    |    1011    |    0101    |    (例) x=11, y=5 だったとする
    +-------------------------+

    +-------------------------+
    |    1111    |    1011    |    右に4ビットシフトした状態
    +-------------------------+

  &      0000         1111         左側の4ビットが要らないのでビットマスクする
 ------------------------------
         0000         1011         右側の4ビットだけが取り出せた




















